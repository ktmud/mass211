scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concomitance ")
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concomitance ")
cor.res <- cor.test(~ Housing + `Income Support`,
zip.cat.count %>% filter(Housing > 0 & `Income Support` > 0),
method = "kendall")
cor.res.tau <- cor.res$estimate %>% round(3)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("0:0")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concomitance ")
rmarkdown::render("1-Big Picture.Rmd")
min(cat.corr$tau)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("0:0")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "spearman")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concomitance ")
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("0:0")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concordance between service categories")
cor.res.rho <- cor.res$estimate %>% round(3)
cor.res <- cor.test(~ Housing + `Income Support`,
zip.cat.count %>% filter(Housing > 0 & `Income Support` > 0),
method = "spearman")
cor.res.rho <- cor.res$estimate %>% round(3)
cor.res <- cor.test(~ Housing + `Income Support`,
zip.cat.count %>% filter(Housing > 0 & `Income Support` > 0),
method = "kendall")
cor.res.tau <- cor.res$estimate %>% round(3)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("0:0")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "", title = "Concordance between service categories")
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return()
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return(NULL)
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("-20:-20")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("-50:-50")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cats <- unique(mmcalls$airs.cat)
cat.corr <-
sapply(cats, function(x) {
sapply(cats, function(y) {
if (x == y) {
return("0:0")
}
f <- formula(sprintf("~  \`%s\` + \`%s\`", x, y))
dat <- zip.cat.count %>%
.[.[[x]] > 0 & .[[y]] > 0, ]
ct <- cor.test(formula = f, data = dat, method = "kendall")
str_c(ct$estimate, ":", ct$p.value)
})
})
cat.corr <- cat.corr %>% as.data.frame()
cat.corr$key <- row.names(cat.corr) %>% str_replace(".tau", "")
cat.corr <- cat.corr %>% gather(key)
colnames(cat.corr) <- c("x", "y", "value")
cat.corr %<>% as_tibble() %>%
separate(value, into = c("tau", "p.value"), sep = ":", convert = TRUE)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.05, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
max(cat.corr$tau)
which(cat.corr$tau == 1)
cat.corr[which(cat.corr$tau == 1), ]
zip.cat.count %>% filter(Arts/Culture/Recreation > 0 & Employment > 0)
zip.cat.count %>% filter(`Arts/Culture/Recreation`` > 0 & Employment > 0)
)
``
zip.cat.count %>% filter(`Arts/Culture/Recreation` > 0 & Employment > 0)
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.01, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
rmarkdown::render("1-Big Picture.Rmd")
cat.corr %>%
filter(
p.value < 0.01
) %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.01, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cat.corr %>%
filter(
p.value < 0.01
) %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cat.corr %>%
filter(
p.value < 0.01
) %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cat.corr %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau,
alpha = ifelse(p.value > 0.01, 0, 1)
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
cat.corr %>%
filter(
p.value < 0.01
) %>%
ggplot(
aes(
x = x,
y = factor(y, unique(y) %>% sort(decreasing = TRUE))
)
) +
geom_tile(aes(
fill = tau
)) +
scale_fill_gradient(low = "white",  high = "steelblue") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), position = "right") +
theme(
legend.position = "none",
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
) +
labs(x = "", y = "")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
warnings()
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
