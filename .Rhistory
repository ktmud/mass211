select(CallReportNum, TaxonomyCode, TaxonomyName,
Level3Name, AIRSNeedCategory, ParentAgencyName) %>%
rename(id = CallReportNum,
cat = TaxonomyCode,
cat_name = TaxonomyName,
cat3_name = Level3Name,
airs_cat = AIRSNeedCategory,
agency = ParentAgencyName) %>%
distinct()
bad.ids <- calloutcome %>% filter(is.na(airs_cat)) %>% distinct(id) %>% unlist()
ok.ids <- calloutcome %>% filter(!is.na(airs_cat)) %>% distinct(id) %>% unlist()
bad.rows <- calloutcome %>% filter(id %in% bad.ids[which(!(bad.ids %in% ok.ids))])
unique(cat3_name)
unique(cat3_name)
unique(bad.rows$cat3_name)
table(bad.rows$cat3_name)
count(bad.rows$cat3_name, sort = TRUE)
count(bad.rows, cat3_name, sort = TRUE)
View(icalls)
View(mcalls)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
count(bad.rows, cat3_name, sort = TRUE)
bad.rows$cat3_name %>%
recode(`Homeless People` = "Individual, Family and Community Support")
count(bad.rows, cat3_name, sort = TRUE)
unique(met_unmet$AIRSNeedCategory) %>% sort()
View(calloutcome)
bad.rows$cat3_name %>%
recode(
`Homeless People` = "Individual, Family and Community Support",
.default = airs_cat)
bad.rows$cat3_name %>%
recode(
`Homeless People` = "Individual, Family and Community Support",
.default = bad.rows$airs_cat)
unique(met_unmet$AIRSNeedCategory) %>% sort()
count(bad.rows, cat3_name, sort = TRUE)
count(bad.rows, cat4_name, sort = TRUE)
View(icalls)
View(call_reports)
View(icalls)
View(mcalls)
recode(bad.rows$cat3_name,
# sheltering? food? we don't know.
# `Homeless People` = "Individual, Family and Community Support",
`Health Conditions` = "Health Care",
`Developmental Disabilities` = "Health Care",
`Health Conditions` = "Health Care",
`Older Adults` = "Information Services",
.default = recode(
bad.rows$cat4_name,
`Low Income` = "Income Support/Assistance",
.default = bad.rows$airs_cat)
)
calloutcome[calloutcome$id == bad.rows$id, ]$airs_cat <- recode(bad.rows$cat3_name,
# sheltering? food? we don't know.
# `Homeless People` = "Individual, Family and Community Support",
`Health Conditions` = "Health Care",
`Developmental Disabilities` = "Health Care",
`Health Conditions` = "Health Care",
`Older Adults` = "Information Services",
.default = recode(
bad.rows$cat4_name,
`Low Income` = "Income Support/Assistance",
.default = bad.rows$airs_cat)
)
calloutcome[calloutcome$id == bad.rows$id, ]$airs_cat
calloutcome[calloutcome$id == bad.rows$id, ]
bad.rows$id
calloutcome[calloutcome$id %in% bad.rows$id, ]
calloutcome[calloutcome$id %in% bad.rows$id, ]$airs_cat
calloutcome[calloutcome$id %in% bad.rows$id, ]$airs_cat <- recode(bad.rows$cat3_name,
# sheltering? food? we don't know.
# `Homeless People` = "Individual, Family and Community Support",
`Health Conditions` = "Health Care",
`Developmental Disabilities` = "Health Care",
`Health Conditions` = "Health Care",
`Older Adults` = "Information Services",
.default = recode(
bad.rows$cat4_name,
`Low Income` = "Income Support/Assistance",
.default = bad.rows$airs_cat)
)
calloutcome[calloutcome$id %in% bad.rows$id, ]$airs_cat
mcalls <- icalls %>%
left_join(calloutcome, by = "id") %>%
filter(!is.na(airs_cat))
View(mcalls)
hist(mcalls$call.length)
View(calls$`Mass 211`)
call_reports$`Caller Data - Call Origination`
source('~/Dropbox (Personal)/Work/Mass 211/cats.R', echo=TRUE)
View(full.cats)
View(mcalls)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
cats.tree <- CountCats(mcalls)
View(cats.tree)
cats.tree$code <- NULL  # because it is in the path already
cats.tree <- as.Node(cats.tree)
View(mass211)
View(mcalls)
rmarkdown::render("Memo #2.Rmd")
View(met_unmet)
View(met_unmet)
View(mcalls)
count(bad.rows, cat3.name, sort = TRUE)
View(met_unmet)
View(met_unmet)
count(bad.rows, cat4.name, sort = TRUE)
rmarkdown::render("Memo #2.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
View(call_reports)
nrow(calls$`Mass211 Text`)
nrow(calls$`Mass211 SMS`)
nrow(calls$`Mass211 Chat`)
mcalls %>% count(airs.cat, sort = TRUE)
mcalls %>% count(airs.cat, agency, sort = TRUE)
library(ggplot2)
mcalls %>% count(airs.cat, agency) %>%
ggplot(aes(x = airs.cat, y = agency, fill = n)) %>%
geom_tile()
library(ggplot2)
mcalls %>% count(airs.cat, agency) %>%
ggplot(aes(x = airs.cat, y = agency)) %>%
geom_tile(aes(fill = n))
library(ggplot2)
mcalls %>% count(airs.cat, agency) %>%
collect() %>%
ggplot(aes(x = airs.cat, y = agency)) %>%
geom_tile(aes(fill = n))
library(ggplot2)
mcalls %>% count(airs.cat, agency) %>%
ggplot(aes(x = airs.cat, y = agency)) %>%
geom_tile(aes(fill = n))
library(ggplot2)
mcalls %>% count(airs.cat, agency) %>%
as.data.frame() %>%
ggplot(aes(x = airs.cat, y = agency)) %>%
geom_tile(aes(fill = n))
mcalls %>% count(airs.cat, agency)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
mcalls %>% count(airs.cat, agency)
View(met_unmet)
ggplot(airs.cat, aes(x = agency)) +
geom_histogram()
ggplot(mcalls, aes(x = agency)) +
geom_histogram()
ggplot(mcalls, aes(x = agency)) +
geom_histogram(stat = "count")
ggplot(count(mcalls, agency), aes(x = agency, y = n)) +
geom_histogram(stat = "count")
ggplot(count(mcalls, agency), aes(x = agency)) +
geom_histogram(stat = "count")
ggplot(count(mcalls, agency), aes(x = agency)) +
geom_histogram(stat = "identity")
ggplot(count(mcalls, agency), aes(x = agency, y = n)) +
geom_histogram(stat = "identity")
count(mcalls, agency)
count(mcalls, agency, sort = TRUE)
mcalls %>% count(mcalls, agency, sort = TRUE)
mcalls %>% count(agency, sort = TRUE)
mcalls %>% count(agency.parent, sort = TRUE)
View(mcalls %>% count(agency.parent, sort = TRUE))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
View(mcalls)
mcalls %>% count(airs.cat, agency)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>% unique() %>% sort()
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
unique() %>% sort() %>%
.[1:100]
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
unique() %>% sort() %>%
.[1:50]
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
unique() %>% sort() %>%
.[1:50]
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
count(sort = TRUE)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
count_(sort = TRUE)
?count
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
tibble() %>%
count(sort = TRUE)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
tibble() %>%
count(1, sort = TRUE)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
table(sort = TRUE)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
table()
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
table() %>% as.data.frame() %>% arrange(dest(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$ParentAgencyName)) %>%
table() %>% as.data.frame() %>% arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>% arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq)) %>% head(20)
str_match(met_unmet$AgencyNamePublic, "House")
which(str_match(met_unmet$AgencyNamePublic, "House"))
na.omit(str_match(met_unmet$AgencyNamePublic, "House"))
na.omit(str_view(met_unmet$AgencyNamePublic, "House"))
str_view(met_unmet$AgencyNamePublic, "House")
str_which(met_unmet$AgencyNamePublic, "House")
str_detect(met_unmet$AgencyNamePublic, "House")
str_subset(met_unmet$AgencyNamePublic, "House")
str_subset(unique(met_unmet$AgencyNamePublic), "House")
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace(".* (Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq)) %>% head(20)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace(".*(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq)) %>% head(20)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq)) %>% head(20)
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace("CFCE", "CFCE") %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace("CFCE", "CFCE") %>%
str_replace("Red Cross", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace("CFCE", "CFCE") %>%
str_replace("Behavioral", "Behavioral Health Agency") %>%
str_replace("(Lawyer|Legal)", "Legal Service") %>%
str_replace("Red Cross", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace("CFCE", "CFCE") %>%
str_replace("Behavioral", "Behavioral Health Agency") %>%
str_replace("(Lawyer|Legal)", "Legal Service") %>%
str_replace("Career", "Career Service") %>%
str_replace("Red Cross", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".*CFCE", "CFCE") %>%
str_replace(".*Behavioral", "Behavioral Health Agency") %>%
str_replace(".*(Lawyer|Legal)", "Legal Service") %>%
str_replace(".*Career", "Career Service") %>%
str_replace(".*Red Cross", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center", "Community Center") %>%
str_replace("(Shelter|House)", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".*CFCE.*", "CFCE") %>%
str_replace(".*Behavioral.*", "Behavioral Health Agency") %>%
str_replace(".*(Lawyer|Legal).*", "Legal Service") %>%
str_replace(".*Career.*", "Career Service") %>%
str_replace(".*Red Cross.*", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center.*", "Community Center") %>%
str_replace(".*(Shelter|House).*", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
CleanAgencies <- function(x) {
CleanStrings(x, to.remove = cities) %>%
str_replace(".*CFCE.*", "CFCE") %>%
str_replace(".*CCR&R.*", "CCR&R") %>%
str_replace(".*Behavioral.*", "Behavioral Health Agency") %>%
str_replace(".*(Lawyer|Legal).*", "Legal Service") %>%
str_replace(".*Career.*", "Career Service") %>%
str_replace(".*Red Cross.*", "Red Cross") %>%
str_replace(".* (Community|Family Resource) Center.*", "Community Center") %>%
str_replace(".*(Shelter|House).*", "Shelter")
}
CleanAgencies(unique(met_unmet$AgencyNamePublic)) %>%
table() %>% as.data.frame() %>%
arrange(desc(Freq))
View(mcalls)
View(call_reports)
View(custom_fields)
count(bad.rows, cat3.name, sort = TRUE)
View(mcalls %>% count(agency, sort = TRUE))
View(icalls)
View(mcalls %>% count(agency, sort = TRUE))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
View(mcalls)
View(mcalls)
ret <- mcalls
unique(ret$how.heard)
length(which(!is.na(call_reports$`Data Collection - How did you Learn about Mass211`)))
length(which(!is.na(call_reports$`Caller Data - How did you Learn about Call2Talk`)))
length(which(!is.na(call_reports$`Data Collection - How did you Learn about Mass211`)))
mcalls %>% count(how.heard, sort = T)
View(mcalls %>% count(how.heard, sort = T)0
View(mcalls %>% count(how.heard, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
mcalls %>% count(how.heard, sort = T)
View(mcalls %>% count(how.heard, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
na.omit
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
View(mcalls %>% count(how.heard, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
View(mcalls %>% count(how.heard, sort = T))
install.packages(c("rCharts", "igraph"))
install.packages("flexdashboard")
source('~/Dropbox (Personal)/Work/Mass 211/sankey.R', echo=TRUE)
install.packages("rCharts")
count1 <- icalls %>%
count(how.heard, airs.cat)
library(plyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(stringr)
library(readxl)
library(xml2)
library(networkD3)
count1 <- icalls %>%
count(how.heard, airs.cat)
View(mcalls %>% count(agency, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
View(met_unmet)
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
count2 <- mcalls %>%
count(airs.cat, agency.simple)
View(count2)
View(mcalls %>% count(agency.simple, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
popular.agency <- mcalls %>%
count(agency.simple, sort = TRUE) %>%
.[1:20, "agency.simple"]
View(popular.agency)
popular.agency <- mcalls %>%
count(agency.simple, sort = TRUE) %>%
.[1:20, "agency.simple", drop = TRUE]
popular.agency <- mcalls %>%
count(agency.simple, sort = TRUE) %>%
.[1:20, "agency.simple"] %>%
unlist()
popular.agency
count2 <- mcalls %>%
count(airs.cat, agency.simple2, sort = TRUE)
mcalls %<>% mutate(
agency.simple2 = ifelse(agency.simple %in% popular.agency, agency.simple, "Other")
)
count2 <- mcalls %>%
count(airs.cat, agency.simple2, sort = TRUE)
View(count2)
View(mcalls %>% count(agency.simple, sort = T))
source('~/Dropbox (Personal)/Work/Mass 211/prepare.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/explore.R', echo=TRUE)
source('~/Dropbox (Personal)/Work/Mass 211/src/index.R', echo=TRUE)
source("src/metrics.R")
source('~/Dropbox (Personal)/Work/Mass 211/src/index.R', echo=TRUE)
install.packages(c("tufte", "devtools")
)
install.packages("rgdal")
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE, warning = FALSE,
tidy = FALSE, cache.extra = packageVersion('tufte')
)
options(htmltools.dir.version = FALSE)
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
install.packages("networkD3")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
library(plyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(stringr)
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
rmarkdown::render("1-Big Picture.Rmd")
source("./src/sankey.R")
sankeyNetwork(
Links = sk.links,
Nodes = sk.nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
# linkOpacity = 0.08,
colourScale = "d3.scaleOrdinal(d3.schemeCategory10)",
units = "calls",
margin = list(left = 0, right = 0, top = 0, bottom = 0),
fontSize = 10,
nodePadding = 9,
nodeWidth = 40
)
